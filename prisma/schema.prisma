// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

model User {
  id              String          @id @default(cuid())
  email           String          @unique
  password        String
  firstName       String
  lastName        String
  role            String         @default("USER")
  twoFactorSecret String?
  twoFactorEnabled Boolean        @default(false)
  createdAt       DateTime        @default(now())
  updatedAt       DateTime        @updatedAt
  profile         Profile?
  opportunities   Investment[]
  passwordReset   PasswordReset[]
  reviewRequests  ReviewRequest[] @relation("Requester")
  reviewsHandled  ReviewRequest[] @relation("Reviewer")
}

model Profile {
  id          String   @id @default(cuid())
  userId      String   @unique
  user        User     @relation(fields: [userId], references: [id])
  phoneNumber String?
  bio         String?
  city        String?
  country     String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Investment {
  id             String        @id @default(cuid())
  title          String
  description    String
  amount         String
  return         String
  businessType   String
  investmentType String
  city           String
  postedBy       User          @relation(fields: [userId], references: [id])
  userId         String
  contactEmail   String
  contactNumber  String?
  image          String?
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt
  reviewRequest  ReviewRequest?
}

model PasswordReset {
  id        String   @id @default(cuid())
  token     String   @unique
  expires   DateTime
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
}

model ReviewRequest {
  id           String       @id @default(cuid())
  investment   Investment   @relation(fields: [investmentId], references: [id])
  investmentId String       @unique
  requester    User         @relation("Requester", fields: [requesterId], references: [id])
  requesterId  String
  reviewer     User?        @relation("Reviewer", fields: [reviewerId], references: [id])
  reviewerId   String?
  status       ReviewStatus @default(PENDING)
  comment      String?
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt
}

enum ReviewStatus {
  PENDING
  APPROVED
  REJECTED
}
